00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 5/17/2015 7:19:25 PM

00000000                             1  *----------------------------------------------------------------------------------------------------
00000000                             2  * Title      : OP-CODE PROGRAM
00000000                             3  * Written by : KUNLAKAN (JEEN) CHERDCHUSILP
00000000                             4  * Date       : 
00000000                             5  * Description: CSS422 DISASSEMBLR GROUP PROJECT
00000000                             6  *----------------------------------------------------------------------------------------------------
00001000                             7                  ORG    $1000
00001000                             8      
00001000  2C7C 00007000              9  START:          MOVE.L  #$7000, A6      ;THESE ARE FOR TESTING! (NEED TO BE REMOVED AFTER DONE)
00001006  2CBC 00005B40             10                  MOVE.L  #$5B40, (A6)
0000100C  247C 00010000             11                  MOVEA.L #$10000, A2     ;INITIATE STARTING LOCATION FOR OUTPUT MEMORY REGION    
00001012                            12                  
00001012                            13  *----------------------------------------------------------------------------------------------------
00001012                            14  * DISASSEMBLIE: DISASSEMBLE HEXADECIMAL INSTRUCTION CODE TO MNEMONIC INSTRUCTION
00001012                            15  * PRECONDITION: - D2, D3, AND A2 MUST NOT BE IN USED
00001012                            16  *               - A6 STORING AN APPROPRIATE STARTING ADDRESS
00001012                            17  * POSTCONDITION: - IF THE INSTRUCTION IS IN THE REQUIREMENT, THE STRING OF THE RESULT WILL BE STORED
00001012                            18  *                  IN OUTPUT MEMORY REGION POINTED BY A2
00001012                            19  *                - IF THE INSTRUCTION IS NOT IN THE REQUIREMENT, FOR NOW IT WILL BE IGNORED
00001012                            20  *----------------------------------------------------------------------------------------------------
00001012                            21  
00001012  2416                      22  DISASSEMBLE     MOVE.L  (A6), D2        ;RETRIEVE ORIGINAL INSTRUCTION TO D2 (NO CHANGE ALLOWED)
00001014  2602                      23                  MOVE.L  D2, D3          ;COPY ORIGINAL INSTRUCTION TO D3 (CHANGE ALLOW)
00001016                            24  
00001016  E04B                      25                  LSR     #8, D3          ;GET THE FIRST 4 BITS
00001018  E84B                      26                  LSR     #4, D3
0000101A  C6FC 0006                 27                  MULU    #6, D3
0000101E                            28                  
0000101E  47F9 0000102A             29                  LEA     MAINTABLE, A3   ;LOAD INDEX INTO THE TABLE
00001024  4EB3 3000                 30                  JSR     0(A3, D3)       ;JUMP INDIRECT WITH INDEX
00001028  4E75                      31                  RTS
0000102A                            32                                  
0000102A                            33  *----------------------------------------------------------------------------------------------------
0000102A                            34  * MAINTABLE: THIS IS A PRIMARY JUMP TABLE FOR DETERMINING TYPES OF OPCODES INSTRUCTION BY LOOKING  AT
0000102A                            35  *            THE FIRST 4 BITS IN THE HEXADECIMAL INSTRUCTION 
0000102A                            36  *----------------------------------------------------------------------------------------------------
0000102A  4EF9 0000107A             37  MAINTABLE       JMP     CODE0000
00001030  4EF9 000010C4             38                  JMP     CODE0001
00001036  4EF9 000010DE             39                  JMP     CODE0010
0000103C  4EF9 0000111A             40                  JMP     CODE0011
00001042  4EF9 00001158             41                  JMP     CODE0100
00001048  4EF9 00001158             42                  JMP     CODE0101
0000104E  4EF9 00001176             43                  JMP     CODE0110
00001054  4EF9 00001176             44                  JMP     CODE1000
0000105A  4EF9 00001180             45                  JMP     CODE1001
00001060  4EF9 00001198             46                  JMP     CODE1011
00001066  4EF9 00001198             47                  JMP     CODE1100
0000106C  4EF9 00001198             48                  JMP     CODE1101
00001072  4EF9 00001198             49                  JMP     CODE1110
00001078  4E75                      50  FINISHE         RTS
0000107A                            51  
0000107A                            52  *----------------------------------------------------------------------------------------------------
0000107A                            53  * CODE0000: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0000 INTO BCLR, ORI, OR CMPI
0000107A                            54  *           INSTRUCTION
0000107A                            55  *----------------------------------------------------------------------------------------------------
0000107A  2602                      56  CODE0000        MOVE.L      D2, D3
0000107C  E94B                      57                  LSL         #4, D3
0000107E  E04B                      58                  LSR         #8, D3
00001080  60F6                      59                  BRA         FINISHE
00001082                            60  
00001082                            61  
00001082  4EF9 00001094             62  TABLE0000      JMP         ORI
00001088  4EF9 000010AA             63                 JMP         CMPI
0000108E  4EF9 00001094             64                 JMP         ORI
00001094                            65              
00001094  14FC 004F                 66  ORI             MOVE.B      #'O', (A2)+
00001098  14FC 0052                 67                  MOVE.B      #'R', (A2)+
0000109C  14FC 0049                 68                  MOVE.B      #'I', (A2)+
000010A0  14FC 002E                 69                  MOVE.B      #'.', (A2)+
000010A4  4EB9 000011FA             70                  JSR         GET_SIZE
000010AA                            71                  ;JSR         ISORI
000010AA                            72  
000010AA  14FC 0043                 73  CMPI            MOVE.B      #'C', (A2)+
000010AE  14FC 004D                 74                  MOVE.B      #'M', (A2)+
000010B2  14FC 0050                 75                  MOVE.B      #'P', (A2)+
000010B6  14FC 0049                 76                  MOVE.B      #'I', (A2)+
000010BA  14FC 002E                 77                  MOVE.B      #'.', (A2)+
000010BE  4EB9 000011FA             78                  JSR         GET_SIZE
000010C4                            79                  ;JSR         ISCMPI
000010C4                            80                  
000010C4                            81  ;BCLR                
000010C4                            82  
000010C4                            83  *----------------------------------------------------------------------------------------------------
000010C4                            84  * CODE0001: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0001 INTO MOVE.B INSTRUCTION
000010C4                            85  *----------------------------------------------------------------------------------------------------
000010C4  14FC 004D                 86  CODE0001        MOVE.B      #'M', (A2)+
000010C8  14FC 004F                 87                  MOVE.B      #'O', (A2)+
000010CC  14FC 0056                 88                  MOVE.B      #'V', (A2)+
000010D0  14FC 0045                 89                  MOVE.B      #'E', (A2)+
000010D4  14FC 002E                 90                  MOVE.B      #'.', (A2)+
000010D8  14FC 0042                 91                  MOVE.B      #'B', (A2)+
000010DC                            92                  ;JSR         ISMOVEB
000010DC  609A                      93                  BRA         FINISHE
000010DE                            94             
000010DE                            95  *----------------------------------------------------------------------------------------------------
000010DE                            96  * CODE0010: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0010 INTO MOVE.L OR MOVEA.L
000010DE                            97  *           INSTRUCTION
000010DE                            98  *----------------------------------------------------------------------------------------------------
000010DE  14FC 004D                 99  CODE0010        MOVE.B      #'M', (A2)+
000010E2  14FC 004F                100                  MOVE.B      #'O', (A2)+
000010E6  14FC 0056                101                  MOVE.B      #'V', (A2)+
000010EA  14FC 0045                102                  MOVE.B      #'E', (A2)+
000010EE  4EB9 00001100            103                  JSR         MOVEAL
000010F4  6082                     104                  BRA         FINISHE
000010F6                           105  
000010F6  14FC 002E                106  MOVEL           MOVE.B      #'.', (A2)+
000010FA  14FC 004C                107                  MOVE.B      #'L', (A2)+
000010FE                           108                  ;JSR         ISMOVEL
000010FE  4E75                     109                  RTS
00001100                           110            
00001100  2602                     111  MOVEAL          MOVE.L      D2, D3          ;MAKE A COPY OF ORIGINAL INSTRUCTION TO D3
00001102  EF4B                     112                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
00001104  E84B                     113                  LSR         #4, D3          ;SHIT TO THE RIGHT 4 BITS
00001106  0C43 0001                114                  CMPI.W      #%001, D3       ;CHECK IF THIS INSTRUCTION IS MOVEA
0000110A  66EA                     115                  BNE         MOVEL           ;IF THE INSTRUCTION IS NOT MOVEA, IT MUST BE MOVE
0000110C  14FC 0041                116                  MOVE.B      #'A',(A2)+      ;OTHERWISE, IT IS MOVEA.
00001110  14FC 002E                117                  MOVE.B      #'.', (A2)+
00001114  14FC 004C                118                  MOVE.B      #'L', (A2)+
00001118                           119                  ;JSR         ISMOVEAL
00001118  4E75                     120                  RTS
0000111A                           121  
0000111A                           122  *----------------------------------------------------------------------------------------------------
0000111A                           123  * CODE0011: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0011 INTO MOVE.W OR MOVEA.W
0000111A                           124  *           INSTRUCTION
0000111A                           125  *----------------------------------------------------------------------------------------------------
0000111A  14FC 004D                126  CODE0011        MOVE.B      #'M', (A2)+
0000111E  14FC 004F                127                  MOVE.B      #'O', (A2)+
00001122  14FC 0056                128                  MOVE.B      #'V', (A2)+
00001126  14FC 0045                129                  MOVE.B      #'E', (A2)+
0000112A  4EB9 0000113E            130                  JSR         MOVEAW
00001130  6000 FF46                131                  BRA         FINISHE
00001134                           132  
00001134  14FC 002E                133  MOVEW           MOVE.B      #'.', (A2)+
00001138  14FC 0057                134                  MOVE.B      #'W', (A2)+
0000113C                           135                  ;JSR         ISMOVEW
0000113C  4E75                     136                  RTS
0000113E                           137            
0000113E  2602                     138  MOVEAW          MOVE.L      D2, D3          ;MAKE A COPY OF ORIGINAL INSTRUCTION TO D3
00001140  EF4B                     139                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
00001142  E84B                     140                  LSR         #4, D3          ;SHIT TO THE RIGHT 4 BITS
00001144  0C43 0001                141                  CMPI.W      #%001, D3       ;CHECK IF THIS INSTRUCTION IS MOVEA
00001148  66EA                     142                  BNE         MOVEW           ;IF THE INSTRUCTION ISNOT MOVEA, IT MUST BE MOVE
0000114A  14FC 0041                143                  MOVE.B      #'A',(A2)+      ;OTHERWISE, IT IS MOVEA.
0000114E  14FC 002E                144                  MOVE.B      #'.', (A2)+
00001152  14FC 0057                145                  MOVE.B      #'W', (A2)+
00001156                           146                  ;JSR         ISMOVEAW
00001156  4E75                     147                  RTS
00001158                           148  
00001158                           149  *---------------------------------------------------------------------
00001158                           150  * CODE0100: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0100
00001158                           151  *           INTO MOVEM, DIVS, LEA, NEG, JSR, OR RTS INSTRUCTION
00001158                           152  *---------------------------------------------------------------------
00001158                           153  CODE0100
00001158                           154  ; NEED A JUMP TABLE TO DETERMIND THIS:
00001158                           155  ; - MOVEM
00001158                           156  ; - DIVS
00001158                           157  ; - LEA
00001158                           158  ; - NEG
00001158                           159  ; - JSR
00001158                           160  ; - RTS
00001158                           161  
00001158                           162  *---------------------------------------------------------------------
00001158                           163  * CODE0101: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0101
00001158                           164  *           INTO SUBQ INSTRUCTION
00001158                           165  *---------------------------------------------------------------------
00001158  14FC 0053                166  CODE0101        MOVE.B      #'S', (A2)+
0000115C  14FC 0055                167                  MOVE.B      #'U', (A2)+
00001160  14FC 0042                168                  MOVE.B      #'B', (A2)+
00001164  14FC 0051                169                  MOVE.B      #'Q', (A2)+
00001168  14FC 002E                170                  MOVE.B      #'.', (A2)+
0000116C                           171                  
0000116C  4EB9 000011FA            172                  JSR         GET_SIZE
00001172                           173                  ;JSR         EASUBQ
00001172  6000 FF04                174                  BRA         FINISHE
00001176                           175  
00001176                           176  *---------------------------------------------------------------------
00001176                           177  * CODE0110: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0110
00001176                           178  *           INTO OR BCC, BCS, BGE, BLT, BVC, OR BRA INSTRUCTION
00001176                           179  *---------------------------------------------------------------------
00001176                           180  CODE0110
00001176                           181  ; NEED A JUMP TABLE TO DETERMIND EITHER THIS IS A BCLR OR CMPI
00001176                           182  ; - BCC
00001176                           183  ; - BCS
00001176                           184  ; - BGE
00001176                           185  ; - BLT
00001176                           186  ; - BVC
00001176                           187  ; - BRA
00001176                           188  
00001176                           189  *----------------------------------------------------------------------------------------------------
00001176                           190  * CODE1000: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1000 INTO OR INSTRUCTION
00001176                           191  *----------------------------------------------------------------------------------------------------
00001176  14FC 004F                192  CODE1000        MOVE.B      #'O', (A2)+
0000117A  14FC 0052                193                  MOVE.B      #'R', (A2)+
0000117E                           194                  
0000117E                           195                  ;JSR        ISOR
0000117E  4E75                     196  RETURN1000      RTS
00001180                           197  
00001180                           198  *----------------------------------------------------------------------------------------------------
00001180                           199  * CODE1001: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1001 INTO SUB INSTRUCTION
00001180                           200  *----------------------------------------------------------------------------------------------------
00001180  14FC 0053                201  CODE1001        MOVE.B      #'S', (A2)+
00001184  14FC 0055                202                  MOVE.B      #'U', (A2)+
00001188  14FC 0042                203                  MOVE.B      #'B', (A2)+
0000118C  14FC 002E                204                  MOVE.B      #'.', (A2)+
00001190  4EB9 00001198            205                  JSR         GET_OPMODE
00001196                           206                  ;JSR        ISSUB
00001196  4E75                     207  RETURN1001      RTS
00001198                           208  *---------------------------------------------------------------------
00001198                           209  * CODE1011: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1011
00001198                           210  *           INTO EOR OR CMP INSTRUCTION
00001198                           211  *---------------------------------------------------------------------
00001198                           212  CODE1011
00001198                           213  ; EOR
00001198                           214  ; CMP
00001198                           215  
00001198                           216  
00001198                           217  *---------------------------------------------------------------------
00001198                           218  * CODE1100: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1100
00001198                           219  *           INTO MUL INSTRUCTION
00001198                           220  *---------------------------------------------------------------------
00001198                           221  CODE1100
00001198                           222  ;MULS
00001198                           223  
00001198                           224  *---------------------------------------------------------------------
00001198                           225  * CODE1101: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1101
00001198                           226  *           INTO ADDA INSTRUCTION
00001198                           227  *---------------------------------------------------------------------
00001198                           228  CODE1101
00001198                           229  ; ADD
00001198                           230  ; ADDA
00001198                           231  
00001198                           232  *---------------------------------------------------------------------
00001198                           233  * CODE1110: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1110
00001198                           234  *           INTO LSR, LSL, ASR, ASL, ROL, OR ROR INSTRUCTION
00001198                           235  *---------------------------------------------------------------------
00001198                           236  CODE1110
00001198                           237  ; LSR
00001198                           238  ; LSL
00001198                           239  ; ASR
00001198                           240  ; ASL
00001198                           241  ; ROL
00001198                           242  ; ROR
00001198                           243  
00001198                           244  
00001198                           245  *----------------------------------------------------------------------------------------------------
00001198                           246  * GET_OPMODE: THIS IS FUNCTION FOR DETERMINDING THE OPMODE OF THE INSTRUCTION
00001198                           247  *----------------------------------------------------------------------------------------------------
00001198  2602                     248  GET_OPMODE      MOVE.L      D2, D3          ;MAKE A COPY OF INSTRUCTION TO D3
0000119A  EF4B                     249                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
0000119C  E84B                     250                  LSR         #4, D3          ;SHIFT TO THE RIGHT 4 BITS
0000119E  EE4B                     251                  LSR         #7, D3          ;SHIFT TO THE RIGHT 7 BITS
000011A0  C6FC 0006                252                  MULU        #6, D3
000011A4                           253                  
000011A4  47F9 000011B0            254                  LEA         TABLEOPMODE, A3
000011AA  4EB3 3000                255                  JSR         0(A3, D3)
000011AE  4E75                     256                  RTS
000011B0                           257    
000011B0  4EB9 000011D6            258  TABLEOPMODE     JSR         MODE_BYTE2
000011B6  4EB9 000011DC            259                  JSR         MODE_WORD2
000011BC  4EB9 000011E2            260                  JSR         MODE_LONG2
000011C2  4EB9 000011E8            261                  JSR         MODE_BYTE3
000011C8  4EB9 000011EE            262                  JSR         MODE_WORD3
000011CE  4EB9 000011F4            263                  JSR         MODE_LONG3
000011D4  4E75                     264  RETURN_OPMODE   RTS
000011D6                           265                  
000011D6  14FC 0042                266  MODE_BYTE2      MOVE.B      #'B', (A2)+
000011DA  60F8                     267                  BRA         RETURN_OPMODE
000011DC                           268  
000011DC  14FC 0057                269  MODE_WORD2      MOVE.B      #'W', (A2)+
000011E0  60F2                     270                  BRA         RETURN_OPMODE
000011E2                           271  
000011E2  14FC 004C                272  MODE_LONG2      MOVE.B      #'L', (A2)+
000011E6  60EC                     273                  BRA         RETURN_OPMODE
000011E8                           274  
000011E8  14FC 0042                275  MODE_BYTE3      MOVE.B      #'B', (A2)+
000011EC  60E6                     276                  BRA         RETURN_OPMODE
000011EE                           277  
000011EE  14FC 0057                278  MODE_WORD3      MOVE.B      #'W', (A2)+
000011F2  60E0                     279                  BRA         RETURN_OPMODE
000011F4                           280                  
000011F4  14FC 004C                281  MODE_LONG3      MOVE.B      #'L', (A2)+
000011F8  60DA                     282                  BRA         RETURN_OPMODE
000011FA                           283                  
000011FA                           284  *----------------------------------------------------------------------------------------------------
000011FA                           285  * GET_SIZE : THIS IS A FUNCTION FOR DETERMINDING THE SIZE OF THE INSTRUCTION
000011FA                           286  *----------------------------------------------------------------------------------------------------
000011FA  2602                     287  GET_SIZE        MOVE.L      D2, D3          ;MAKE A COPY OF ORIGINAL INSTRUCTION TO D3
000011FC  E14B                     288                  LSL         #8, D3          ;SHIFT TO THE LEFT 8 BITS
000011FE  EC4B                     289                  LSR         #6, D3          ;SHIFT TO THE RIGHT 6 BITS
00001200  E04B                     290                  LSR         #8, D3          ;SHIFT TO THE RIGHT 8 BITS
00001202  C6FC 0006                291                  MULU        #6, D3
00001206                           292                  
00001206  47F9 00001212            293                  LEA         TABLESIZE, A3
0000120C  4EB3 3000                294                  JSR         0(A3, D3)
00001210  4E75                     295                  RTS
00001212                           296  
00001212  4EF9 00001226            297  TABLESIZE       JMP         SIZE_BYTE1
00001218  4EF9 0000122C            298                  JMP         SIZE_WORD1
0000121E  4EF9 00001232            299                  JMP         SIZE_LONG1
00001224  4E75                     300  RETURN_SIZE     RTS
00001226                           301                  
00001226  14FC 0042                302  SIZE_BYTE1      MOVE.B      #'B', (A2)+
0000122A  60F8                     303                  BRA         RETURN_SIZE
0000122C                           304                  
0000122C  14FC 0057                305  SIZE_WORD1      MOVE.B      #'W', (A2)+
00001230  60F2                     306                  BRA         RETURN_SIZE
00001232                           307                  
00001232  14FC 004C                308  SIZE_LONG1      MOVE.B      #'L', (A2)+
00001236  60EC                     309                  BRA         RETURN_SIZE
00001238                           310                  
00001238                           311                  
00001238                           312  
00001238                           313                  END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CMPI                10AA
CODE0000            107A
CODE0001            10C4
CODE0010            10DE
CODE0011            111A
CODE0100            1158
CODE0101            1158
CODE0110            1176
CODE1000            1176
CODE1001            1180
CODE1011            1198
CODE1100            1198
CODE1101            1198
CODE1110            1198
DISASSEMBLE         1012
FINISHE             1078
GET_OPMODE          1198
GET_SIZE            11FA
MAINTABLE           102A
MODE_BYTE2          11D6
MODE_BYTE3          11E8
MODE_LONG2          11E2
MODE_LONG3          11F4
MODE_WORD2          11DC
MODE_WORD3          11EE
MOVEAL              1100
MOVEAW              113E
MOVEL               10F6
MOVEW               1134
ORI                 1094
RETURN1000          117E
RETURN1001          1196
RETURN_OPMODE       11D4
RETURN_SIZE         1224
SIZE_BYTE1          1226
SIZE_LONG1          1232
SIZE_WORD1          122C
START               1000
TABLE0000           1082
TABLEOPMODE         11B0
TABLESIZE           1212
