00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 5/16/2015 10:35:30 AM

00000000                             1  *----------------------------------------------------------------------------------------------------
00000000                             2  * Title      : OP-CODE PROGRAM
00000000                             3  * Written by : KUNLAKAN (JEEN) CHERDCHUSILP
00000000                             4  * Date       : 
00000000                             5  * Description: CSS422 DISASSEMBLR GROUP PROJECT
00000000                             6  *----------------------------------------------------------------------------------------------------
00001000                             7                  ORG    $1000
00001000                             8      
00001000  2C7C 00007000              9  START:          MOVE.L  #$7000, A6      ;THESE ARE FOR TESTING! (NEED TO BE REMOVED AFTER DONE)
00001006  2CBC 00003200             10                  MOVE.L  #$3200, (A6)    
0000100C                            11                  
0000100C                            12  *----------------------------------------------------------------------------------------------------
0000100C                            13  * DISASSEMBLIE: DISASSEMBLE HEXADECIMAL INSTRUCTION CODE
0000100C                            14  * PRECONDITION: - D2, D3, AND A2 MUST NOT BE IN USED
0000100C                            15  *               - A6 STORING AN APPROPRIATE STARTING ADDRESS
0000100C                            16  * POSTCONDITION: - IF THE INSTRUCTION IS IN THE REQUIREMENT, THE STRING OF THE RESULT WILL BE STORED
0000100C                            17  *                  IN OUTPUT MEMORY REGION POINTED BY A2
0000100C                            18  *                - IF THE INSTRUCTION IS NOT IN THE REQUIREMENT, FOR NOW IT WILL BE IGNORED
0000100C                            19  *----------------------------------------------------------------------------------------------------
0000100C                            20  
0000100C  247C 0000A000             21  DISASSEMBLE     MOVEA.L #$A000, A2      ;INITIATE STARTING LOCATION FOR OUTPUT MEMORY REGION  
00001012  2416                      22                  MOVE.L  (A6), D2        ;RETRIEVE HEXADECIMAL INSTRUCTION FROM ADDRESS POINTED BY A6
00001014  2602                      23                  MOVE.L  D2, D3          ;MAKE A COPY OF INSTRUCTION TO D3
00001016                            24  
00001016  E04B                      25                  LSR     #8, D3          ;GET THE FIRST 4 BITS
00001018  E84B                      26                  LSR     #4, D3          
0000101A  4EB9 00001020             27                  JSR     MAINTABLE
00001020                            28                  
00001020                            29  *----------------------------------------------------------------------------------------------------
00001020                            30  * MAINTABLE: JUMP TABLE FOR THE FIRST 4 BITS IN THE HEXADECIMAL INSTRUCTION TO DETERMIND TYPES OF
00001020                            31  *            OPCODES
00001020                            32  *----------------------------------------------------------------------------------------------------
00001020                            33  MAINTABLE       ;JSR     CODE0000
00001020  4EB9 00001044             34                  JSR     CODE0001
00001026  4EB9 00001066             35                  JSR     CODE0010
0000102C  4EB9 000010A8             36                  JSR     CODE0011
00001032                            37                  ;JSR     CODE0100
00001032                            38                  ;JSR     CODE0101
00001032                            39                  ;JSR     CODE0110
00001032                            40                  ;JSR     CODE1000
00001032                            41                  ;JSR     CODE1001
00001032                            42                  ;JSR     CODE1011
00001032                            43                  ;JSR     CODE1100
00001032                            44                  ;JSR     CODE1101
00001032                            45                  ;JSR     CODE1110
00001032  4E75                      46                  RTS
00001034                            47     
00001034                            48  *----------------------------------------------------------------------------------------------------
00001034                            49  * CODE0000: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0000 INTO BCLR OR CMPI INSTRUCTION
00001034                            50  *----------------------------------------------------------------------------------------------------
00001034  0C43 0000                 51  CODE0000        CMPI.W      #%0000, D3      ;CHECK IF THE FIRST 4 BITS ARE 0000
00001038  6700 0008                 52                  BEQ         RETURN0000
0000103C  2602                      53                  MOVE.L      D2,D3
0000103E  E94B                      54                  LSL         #4, D3
00001040  E04B                      55                  LSR         #8, D3
00001042                            56                  
00001042                            57                  
00001042  4E75                      58  RETURN0000      RTS
00001044                            59  ; NEED A JUMP TABLE TO DETERMIND EITHER THIS IS A BCLR OR CMPI
00001044                            60  ; - BCLR
00001044                            61  ; - CMPI
00001044                            62  ; - ORI
00001044                            63  
00001044                            64  ;TABLE0000   JSR             BCLR1
00001044                            65  ;            JSR             CMPI
00001044                            66  ;            JSR             ORI
00001044                            67              
00001044                            68  ;BCLR    
00001044                            69  
00001044                            70  *----------------------------------------------------------------------------------------------------
00001044                            71  * CODE0001: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0001 INTO MOVE.B INSTRUCTION
00001044                            72  *----------------------------------------------------------------------------------------------------
00001044  0C43 0001                 73  CODE0001        CMPI.W      #%0001, D3      ;CHECK IF THE FIRST 4 DIGITS IS 0001
00001048  6600 001A                 74                  BNE         RETURN0001
0000104C  14FC 004D                 75                  MOVE.B      #'M', (A2)+
00001050  14FC 004F                 76                  MOVE.B      #'O', (A2)+
00001054  14FC 0056                 77                  MOVE.B      #'V', (A2)+
00001058  14FC 0045                 78                  MOVE.B      #'E', (A2)+
0000105C  14FC 002E                 79                  MOVE.B      #'.', (A2)+
00001060  14FC 0042                 80                  MOVE.B      #'B', (A2)+
00001064                            81                  ;JSR         ISMOVEB
00001064  4E75                      82  RETURN0001      RTS
00001066                            83             
00001066                            84  *----------------------------------------------------------------------------------------------------
00001066                            85  * CODE0010: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0010 INTO MOVE.L OR MOVEA.L
00001066                            86  *           INSTRUCTION
00001066                            87  *----------------------------------------------------------------------------------------------------
00001066                            88  
00001066  0C43 0002                 89  CODE0010        CMPI.W      #%0010, D3      ;CHECK IF THE FIRST 4 DIGITS IS 0010
0000106A  6600 0016                 90                  BNE         RETURN0010      
0000106E  14FC 004D                 91                  MOVE.B      #'M', (A2)+
00001072  14FC 004F                 92                  MOVE.B      #'O', (A2)+
00001076  14FC 0056                 93                  MOVE.B      #'V', (A2)+
0000107A  14FC 0045                 94                  MOVE.B      #'E', (A2)+
0000107E  6000 000E                 95                  BRA         MOVEAL
00001082  4E75                      96  RETURN0010      RTS
00001084                            97  
00001084  14FC 002E                 98  MOVEL           MOVE.B      #'.', (A2)+
00001088  14FC 004C                 99                  MOVE.B      #'L', (A2)+
0000108C                           100                  ;JSR         ISMOVEL
0000108C  60F4                     101                  BRA         RETURN0010
0000108E                           102            
0000108E  2602                     103  MOVEAL          MOVE.L      D2, D3          ;MAKE A COPY OF INSTRUCTION TO D3
00001090  EF4B                     104                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
00001092  E84B                     105                  LSR         #4, D3          ;SHIT TO THE RIGHT 4 BITS
00001094  0C43 0001                106                  CMPI.W      #%001, D3       ;CHECK IF THIS INSTRUCTION IS MOVEA
00001098  66EA                     107                  BNE         MOVEL           ;IF THE INSTRUCTION IS NOT MOVEA, IT MUST BE MOVE
0000109A  14FC 0041                108                  MOVE.B      #'A',(A2)+
0000109E  14FC 002E                109                  MOVE.B      #'.', (A2)+
000010A2  14FC 004C                110                  MOVE.B      #'L', (A2)+
000010A6                           111                  ;JSR         ISMOVEAL
000010A6  60DA                     112                  BRA         RETURN0010
000010A8                           113  
000010A8                           114  
000010A8                           115  *----------------------------------------------------------------------------------------------------
000010A8                           116  * CODE0011: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0011 INTO MOVE.W OR MOVEA.W
000010A8                           117  *           INSTRUCTION
000010A8                           118  *----------------------------------------------------------------------------------------------------
000010A8  0C43 0003                119  CODE0011        CMPI.W      #%0011, D3      ;CHECK IF THE FIRST 4 DIGITS IS 0011
000010AC  6600 0016                120                  BNE         RETURN0011
000010B0  14FC 004D                121                  MOVE.B      #'M', (A2)+
000010B4  14FC 004F                122                  MOVE.B      #'O', (A2)+
000010B8  14FC 0056                123                  MOVE.B      #'V', (A2)+
000010BC  14FC 0045                124                  MOVE.B      #'E', (A2)+
000010C0  6000 000E                125                  BRA         MOVEAW
000010C4  4E75                     126  RETURN0011      RTS
000010C6                           127  
000010C6  14FC 002E                128  MOVEW           MOVE.B      #'.', (A2)+
000010CA  14FC 0057                129                  MOVE.B      #'W', (A2)+
000010CE                           130                  ;JSR         ISMOVEW
000010CE  60F4                     131                  BRA         RETURN0011
000010D0                           132            
000010D0  2602                     133  MOVEAW          MOVE.L      D2, D3          ;MAKE A COPY OF INSTRUCTION TO D3
000010D2  EF4B                     134                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
000010D4  E84B                     135                  LSR         #4, D3          ;SHIT TO THE RIGHT 4 BITS
000010D6  0C43 0001                136                  CMPI.W      #%001, D3       ;CHECK IF THIS INSTRUCTION IS MOVEA
000010DA  66EA                     137                  BNE         MOVEW           ;IF THE INSTRUCTION ISNOT MOVEA, IT MUST BE MOVE
000010DC  14FC 0041                138                  MOVE.B      #'A',(A2)+
000010E0  14FC 002E                139                  MOVE.B      #'.', (A2)+
000010E4  14FC 0057                140                  MOVE.B      #'W', (A2)+
000010E8                           141                  ;JSR         ISMOVEAW
000010E8  60DA                     142                  BRA         RETURN0011
000010EA                           143  
000010EA                           144  *---------------------------------------------------------------------
000010EA                           145  * CODE0100: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0100
000010EA                           146  *           INTO MOVEM, DIVS, LEA, NEG, JSR, OR RTS INSTRUCTION
000010EA                           147  *---------------------------------------------------------------------
000010EA                           148  CODE0100
000010EA                           149  ; NEED A JUMP TABLE TO DETERMIND THIS:
000010EA                           150  ; - MOVEM
000010EA                           151  ; - DIVS
000010EA                           152  ; - LEA
000010EA                           153  ; - NEG
000010EA                           154  ; - JSR
000010EA                           155  ; - RTS
000010EA                           156  
000010EA                           157  *---------------------------------------------------------------------
000010EA                           158  * CODE0101: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0101
000010EA                           159  *           INTO SUBQ INSTRUCTION
000010EA                           160  *---------------------------------------------------------------------
000010EA  0C43 0005                161  CODE0101        CMPI.W      #%0101, D3      ;CHECK IF THE FIRST 4 DIGITS IS 0001
000010EE  6700 0004                162                  BEQ         SUBQ
000010F2  4E75                     163  RETURN0101      RTS
000010F4                           164       
000010F4  14FC 0053                165  SUBQ            MOVE.B      #'S', (A2)+
000010F8  14FC 0055                166                  MOVE.B      #'U', (A2)+
000010FC  14FC 0042                167                  MOVE.B      #'B', (A2)+
00001100  14FC 0051                168                  MOVE.B      #'Q', (A2)+
00001104  14FC 002E                169                  MOVE.B      #'.', (A2)+
00001108  2602                     170  GETTYPE         MOVE.L      D2, D3          ;RETRIEVE THE FULL HEXADECIMAL INSTRUCTION
0000110A  E14B                     171                  LSL         #8, D3          ;SHIFT TO THE LEFT 8 BITS
0000110C  E84B                     172                  LSR         #4, D3          ;SHIT TO THE RIGHT 4 BITS
0000110E  4EB9 0000112A            173                  JSR         TABLESIZE
00001114                           174                  ;JSR         EAMOVEB
00001114  6000 FF4E                175                  BRA         RETURN0001
00001118                           176  
00001118                           177  *---------------------------------------------------------------------
00001118                           178  * CODE0110: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0110
00001118                           179  *           INTO OR BCC, BCS, BGE, BLT, BVC, OR BRA INSTRUCTION
00001118                           180  *---------------------------------------------------------------------
00001118                           181  CODE0110
00001118                           182  ; NEED A JUMP TABLE TO DETERMIND EITHER THIS IS A BCLR OR CMPI
00001118                           183  ; - BCC
00001118                           184  ; - BCS
00001118                           185  ; - BGE
00001118                           186  ; - BLT
00001118                           187  ; - BVC
00001118                           188  ; - BRA
00001118                           189  
00001118                           190  *----------------------------------------------------------------------------------------------------
00001118                           191  * CODE1000: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1000 INTO OR INSTRUCTION
00001118                           192  *----------------------------------------------------------------------------------------------------
00001118  0C43 0008                193  CODE1000        CMPI.W      #%1000, D3      ;CHECK IF THE FIRST 4 DIGITS IS 0001
0000111C  6600 000A                194                  BNE         RETURN1000
00001120  1CFC 004F                195                  MOVE.B      #'O', (A6)+
00001124  1CFC 0052                196                  MOVE.B      #'R', (A6)+
00001128                           197                  ;JSR        ISOR
00001128  4E75                     198  RETURN1000      RTS
0000112A                           199  
0000112A                           200  *---------------------------------------------------------------------
0000112A                           201  * CODE1001: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1001
0000112A                           202  *           INTO SUB INSTRUCTION
0000112A                           203  *---------------------------------------------------------------------
0000112A                           204  CODE1001
0000112A                           205  ; SUB
0000112A                           206  
0000112A                           207  *---------------------------------------------------------------------
0000112A                           208  * CODE1011: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1011
0000112A                           209  *           INTO EOR OR CMP INSTRUCTION
0000112A                           210  *---------------------------------------------------------------------
0000112A                           211  CODE1011
0000112A                           212  ; EOR
0000112A                           213  ; CMP
0000112A                           214  
0000112A                           215  
0000112A                           216  *---------------------------------------------------------------------
0000112A                           217  * CODE1100: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1100
0000112A                           218  *           INTO MUL INSTRUCTION
0000112A                           219  *---------------------------------------------------------------------
0000112A                           220  CODE1100
0000112A                           221  ;MULS
0000112A                           222  
0000112A                           223  *---------------------------------------------------------------------
0000112A                           224  * CODE1101: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1101
0000112A                           225  *           INTO ADDA INSTRUCTION
0000112A                           226  *---------------------------------------------------------------------
0000112A                           227  CODE1101
0000112A                           228  ; ADD
0000112A                           229  ; ADDA
0000112A                           230  
0000112A                           231  *---------------------------------------------------------------------
0000112A                           232  * CODE1110: DIASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1110
0000112A                           233  *           INTO LSR, LSL, ASR, ASL, ROL, OR ROR INSTRUCTION
0000112A                           234  *---------------------------------------------------------------------
0000112A                           235  CODE1110
0000112A                           236  ; LSR
0000112A                           237  ; LSL
0000112A                           238  ; ASR
0000112A                           239  ; ASL
0000112A                           240  ; ROL
0000112A                           241  ; ROR
0000112A                           242  
0000112A                           243  TABLEOPMODE
0000112A                           244  
0000112A                           245  *----------------------------------------------------------------------------------------------------
0000112A                           246  * TABLESIZE : THIS IS A JUMP TABLE USED FOR DETERMINDING THE SIZE OF THE INSTRUCTION
0000112A                           247  *----------------------------------------------------------------------------------------------------
0000112A                           248  
0000112A  4EB9 0000113E            249  TABLESIZE       JSR     BYTESIZE
00001130  4EB9 0000114A            250                  JSR     WORDSIZE
00001136  4EB9 00001156            251                  JSR     LONGSIZE
0000113C  4E75                     252  RETURNSIZE      RTS
0000113E                           253                  
0000113E  0C43 0001                254  BYTESIZE        CMPI.W      #%01, D3
00001142  66F8                     255                  BNE         RETURNSIZE
00001144  14FC 0042                256                  MOVE.B      #'B', (A2)+
00001148  4E75                     257                  RTS
0000114A                           258                  
0000114A  0C43 0003                259  WORDSIZE        CMPI.W      #%11, D3
0000114E  66EC                     260                  BNE         RETURNSIZE
00001150  14FC 0057                261                  MOVE.B      #'W', (A2)+
00001154  4E75                     262                  RTS
00001156                           263                  
00001156  0C43 0002                264  LONGSIZE        CMPI.W      #%10, D3
0000115A  66E0                     265                  BNE         RETURNSIZE
0000115C  14FC 004C                266                  MOVE.B      #'L', (A2)+
00001160  4E75                     267                  RTS
00001162                           268  
00001162                           269                  END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
BYTESIZE            113E
CODE0000            1034
CODE0001            1044
CODE0010            1066
CODE0011            10A8
CODE0100            10EA
CODE0101            10EA
CODE0110            1118
CODE1000            1118
CODE1001            112A
CODE1011            112A
CODE1100            112A
CODE1101            112A
CODE1110            112A
DISASSEMBLE         100C
GETTYPE             1108
LONGSIZE            1156
MAINTABLE           1020
MOVEAL              108E
MOVEAW              10D0
MOVEL               1084
MOVEW               10C6
RETURN0000          1042
RETURN0001          1064
RETURN0010          1082
RETURN0011          10C4
RETURN0101          10F2
RETURN1000          1128
RETURNSIZE          113C
START               1000
SUBQ                10F4
TABLEOPMODE         112A
TABLESIZE           112A
WORDSIZE            114A
