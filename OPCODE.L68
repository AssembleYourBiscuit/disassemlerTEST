00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 5/21/2015 12:13:37 PM

00000000                             1  *----------------------------------------------------------------------------------------------------
00000000                             2  * Title      : OP-CODE PROGRAM
00000000                             3  * Written by : KUNLAKAN (JEEN) CHERDCHUSILP
00000000                             4  * Date       : 
00000000                             5  * Description: CSS422 DISASSEMBLR GROUP PROJECT
00000000                             6  *----------------------------------------------------------------------------------------------------
00001000                             7                  ORG     $1000
00001000                             8      
00001000  2C7C 00007000              9  START:          MOVE.L  #$7000, A6      ;THESE ARE FOR TESTING! (NEED TO BE REMOVED AFTER DONE)
00001006  2CBC 00005B40             10                  MOVE.L  #$5B40, (A6)
0000100C  247C 00010000             11                  MOVEA.L #$10000, A2     ;INITIATE STARTING LOCATION FOR OUTPUT MEMORY REGION    
00001012                            12                  
00001012                            13  *----------------------------------------------------------------------------------------------------
00001012                            14  * DISASSEMBLE: DISASSEMBLE HEXADECIMAL INSTRUCTION CODE TO MNEMONIC INSTRUCTION
00001012                            15  * PRECONDITION: - D2, D3, AND A2 MUST NOT BE IN USED
00001012                            16  *               - A6 STORING AN APPROPRIATE STARTING ADDRESS
00001012                            17  * POSTCONDITION: - IF THE INSTRUCTION IS IN THE REQUIREMENT, THE STRING OF THE RESULT WILL BE STORED
00001012                            18  *                  IN OUTPUT MEMORY REGION POINTED BY A2
00001012                            19  *                - IF THE INSTRUCTION IS NOT IN THE REQUIREMENT, FOR NOW IT WILL BE IGNORED
00001012                            20  *----------------------------------------------------------------------------------------------------
00001012                            21  
00001012  2416                      22  DISASSEMBLE     MOVE.L  (A6), D2        ;RETRIEVE ORIGINAL INSTRUCTION TO D2 (NO CHANGE ALLOWED)
00001014  2602                      23                  MOVE.L  D2, D3          ;COPY ORIGINAL INSTRUCTION TO D3 (CHANGE ALLOW)
00001016                            24  
00001016  E04B                      25                  LSR     #8, D3          ;GET THE FIRST 4 BITS BY  SHIFTING BIT  TO THE RIGHT 12 BITS
00001018  E84B                      26                  LSR     #4, D3
0000101A  C6FC 0006                 27                  MULU    #6, D3
0000101E                            28                  
0000101E  47F9 0000102A             29                  LEA     MAINTABLE, A3   ;LOAD INDEX INTO THE TABLE
00001024  4EB3 3000                 30                  JSR     0(A3, D3)       ;JUMP INDIRECT WITH INDEX
00001028  4E75                      31                  RTS
0000102A                            32                                  
0000102A                            33  *----------------------------------------------------------------------------------------------------
0000102A                            34  * MAINTABLE: THIS IS A PRIMARY JUMP TABLE FOR DETERMINING TYPES OF OPCODES INSTRUCTION BY LOOKING  AT
0000102A                            35  *            THE FIRST 4 BITS IN THE HEXADECIMAL INSTRUCTION 
0000102A                            36  *----------------------------------------------------------------------------------------------------
0000102A  4EF9 0000108C             37  MAINTABLE       JMP     CODE0000
00001030  4EF9 000010D6             38                  JMP     CODE0001
00001036  4EF9 000010F4             39                  JMP     CODE0010
0000103C  4EF9 0000113A             40                  JMP     CODE0011
00001042  4EF9 00001180             41                  JMP     CODE0100
00001048  4EF9 00001180             42                  JMP     CODE0101
0000104E  4EF9 000011A2             43                  JMP     CODE0110
00001054  4EF9 000011BA             44                  JMP     CODE0111
0000105A  4EF9 000011BC             45                  JMP     CODE1000
00001060  4EF9 000011D4             46                  JMP     CODE1001
00001066  4EF9 000011F0             47                  JMP     CODE1010
0000106C  4EF9 000011F2             48                  JMP     CODE1011
00001072  4EF9 0000120A             49                  JMP     CODE1100
00001078  4EF9 0000120A             50                  JMP     CODE1101
0000107E  4EF9 0000120A             51                  JMP     CODE1110
00001084  4EF9 0000123A             52                  JMP     CODE1111
0000108A  4E75                      53  FINISH          RTS
0000108C                            54  
0000108C                            55  *----------------------------------------------------------------------------------------------------
0000108C                            56  * CODE0000: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0000 INTO BCLR, ORI, OR CMPI
0000108C                            57  *           INSTRUCTION
0000108C                            58  *----------------------------------------------------------------------------------------------------
0000108C  2602                      59  CODE0000        MOVE.L      D2, D3
0000108E  E94B                      60                  LSL         #4, D3
00001090  E04B                      61                  LSR         #8, D3
00001092  60F6                      62                  BRA         FINISH
00001094                            63  
00001094                            64  
00001094  4EF9 000010A6             65  TABLE0000       JMP         ORI
0000109A  4EF9 000010BC             66                  JMP         CMPI
000010A0  4EF9 000010A6             67                  JMP         ORI
000010A6                            68              
000010A6  14FC 004F                 69  ORI             MOVE.B      #'O', (A2)+
000010AA  14FC 0052                 70                  MOVE.B      #'R', (A2)+
000010AE  14FC 0049                 71                  MOVE.B      #'I', (A2)+
000010B2  14FC 002E                 72                  MOVE.B      #'.', (A2)+
000010B6  4EB9 00001466             73                  JSR         GET_SIZE
000010BC                            74                  ;JSR         ISORI
000010BC                            75  
000010BC  14FC 0043                 76  CMPI            MOVE.B      #'C', (A2)+
000010C0  14FC 004D                 77                  MOVE.B      #'M', (A2)+
000010C4  14FC 0050                 78                  MOVE.B      #'P', (A2)+
000010C8  14FC 0049                 79                  MOVE.B      #'I', (A2)+
000010CC  14FC 002E                 80                  MOVE.B      #'.', (A2)+
000010D0  4EB9 00001466             81                  JSR         GET_SIZE
000010D6                            82                  ;JSR         ISCMPI
000010D6                            83                  
000010D6                            84  ;BCLR                
000010D6                            85  
000010D6                            86  *----------------------------------------------------------------------------------------------------
000010D6                            87  * CODE0001: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0001 INTO MOVE.B INSTRUCTION
000010D6                            88  *----------------------------------------------------------------------------------------------------
000010D6  14FC 004D                 89  CODE0001        MOVE.B      #'M', (A2)+
000010DA  14FC 004F                 90                  MOVE.B      #'O', (A2)+
000010DE  14FC 0056                 91                  MOVE.B      #'V', (A2)+
000010E2  14FC 0045                 92                  MOVE.B      #'E', (A2)+
000010E6  14FC 002E                 93                  MOVE.B      #'.', (A2)+
000010EA  14FC 0042                 94                  MOVE.B      #'B', (A2)+
000010EE  14FC 0009                 95                  MOVE.B      #$09, (A2)+
000010F2                            96                  ;JSR         ISMOVEB
000010F2                            97                  ;CHECK THE BUFFER
000010F2  6096                      98                  BRA         FINISH
000010F4                            99             
000010F4                           100  *----------------------------------------------------------------------------------------------------
000010F4                           101  * CODE0010: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0010 INTO MOVE.L OR MOVEA.L
000010F4                           102  *           INSTRUCTION
000010F4                           103  *----------------------------------------------------------------------------------------------------
000010F4  14FC 004D                104  CODE0010        MOVE.B      #'M', (A2)+
000010F8  14FC 004F                105                  MOVE.B      #'O', (A2)+
000010FC  14FC 0056                106                  MOVE.B      #'V', (A2)+
00001100  14FC 0045                107                  MOVE.B      #'E', (A2)+
00001104  4EB9 0000111C            108                  JSR         MOVEAL
0000110A  6000 FF7E                109                  BRA         FINISH
0000110E                           110  
0000110E  14FC 002E                111  MOVEL           MOVE.B      #'.', (A2)+
00001112  14FC 004C                112                  MOVE.B      #'L', (A2)+
00001116  14FC 0009                113                  MOVE.B      #$09, (A2)+
0000111A                           114                  ;JSR         ISMOVEL
0000111A  4E75                     115                  RTS
0000111C                           116            
0000111C  2602                     117  MOVEAL          MOVE.L      D2, D3          ;MAKE A COPY OF ORIGINAL INSTRUCTION TO D3
0000111E  EF4B                     118                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
00001120  E84B                     119                  LSR         #4, D3          ;SHIT TO THE RIGHT 4 BITS
00001122  0C43 0001                120                  CMPI.W      #%001, D3       ;CHECK IF THIS INSTRUCTION IS MOVEA
00001126  66E6                     121                  BNE         MOVEL           ;IF THE INSTRUCTION IS NOT MOVEA, IT MUST BE MOVE
00001128  14FC 0041                122                  MOVE.B      #'A',(A2)+      ;OTHERWISE, IT IS MOVEA.
0000112C  14FC 002E                123                  MOVE.B      #'.', (A2)+
00001130  14FC 004C                124                  MOVE.B      #'L', (A2)+
00001134  14FC 0009                125                  MOVE.B      #$09, (A2)+
00001138                           126                  ;JSR         ISMOVEAL
00001138  4E75                     127                  RTS
0000113A                           128  
0000113A                           129  *----------------------------------------------------------------------------------------------------
0000113A                           130  * CODE0011: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0011 INTO MOVE.W OR MOVEA.W
0000113A                           131  *           INSTRUCTION
0000113A                           132  *----------------------------------------------------------------------------------------------------
0000113A  14FC 004D                133  CODE0011        MOVE.B      #'M', (A2)+
0000113E  14FC 004F                134                  MOVE.B      #'O', (A2)+
00001142  14FC 0056                135                  MOVE.B      #'V', (A2)+
00001146  14FC 0045                136                  MOVE.B      #'E', (A2)+
0000114A  4EB9 00001162            137                  JSR         MOVEAW
00001150  6000 FF38                138                  BRA         FINISH
00001154                           139  
00001154  14FC 002E                140  MOVEW           MOVE.B      #'.', (A2)+
00001158  14FC 0057                141                  MOVE.B      #'W', (A2)+
0000115C  14FC 0009                142                  MOVE.B      #$09, (A2)+
00001160                           143                  ;JSR         ISMOVEW
00001160  4E75                     144                  RTS
00001162                           145            
00001162  2602                     146  MOVEAW          MOVE.L      D2, D3          ;MAKE A COPY OF ORIGINAL INSTRUCTION TO D3
00001164  EF4B                     147                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
00001166  E84B                     148                  LSR         #4, D3          ;SHIT TO THE RIGHT 4 BITS
00001168  0C43 0001                149                  CMPI.W      #%001, D3       ;CHECK IF THIS INSTRUCTION IS MOVEA
0000116C  66E6                     150                  BNE         MOVEW           ;IF THE INSTRUCTION ISNOT MOVEA, IT MUST BE MOVE
0000116E  14FC 0041                151                  MOVE.B      #'A',(A2)+      ;OTHERWISE, IT IS MOVEA.
00001172  14FC 002E                152                  MOVE.B      #'.', (A2)+
00001176  14FC 0057                153                  MOVE.B      #'W', (A2)+
0000117A  14FC 0009                154                  MOVE.B      #$09, (A2)+
0000117E                           155                  ;JSR         ISMOVEAW
0000117E  4E75                     156                  RTS
00001180                           157  
00001180                           158  *---------------------------------------------------------------------
00001180                           159  * CODE0100: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0100
00001180                           160  *           INTO MOVEM, DIVS, LEA, NEG, JSR, OR RTS INSTRUCTION
00001180                           161  *---------------------------------------------------------------------
00001180                           162  CODE0100
00001180                           163  ; NEED A JUMP TABLE TO DETERMIND THIS:
00001180                           164  ; - MOVEM
00001180                           165  ; - DIVS
00001180                           166  ; - LEA
00001180                           167  ; - NEG
00001180                           168  ; - JSR
00001180                           169  ; - RTS
00001180                           170  
00001180                           171  *----------------------------------------------------------------------------------------------------
00001180                           172  * CODE0101: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0101 INTO SUBQ INSTRUCTION
00001180                           173  *----------------------------------------------------------------------------------------------------
00001180  14FC 0053                174  CODE0101        MOVE.B      #'S', (A2)+
00001184  14FC 0055                175                  MOVE.B      #'U', (A2)+
00001188  14FC 0042                176                  MOVE.B      #'B', (A2)+
0000118C  14FC 0051                177                  MOVE.B      #'Q', (A2)+
00001190  14FC 002E                178                  MOVE.B      #'.', (A2)+
00001194  4EB9 00001466            179                  JSR         GET_SIZE
0000119A  14FC 0009                180                  MOVE.B      #$09, (A2)+
0000119E                           181                  ;JSR         EASUBQ
0000119E  6000 FEEA                182                  BRA         FINISH
000011A2                           183  
000011A2                           184  *----------------------------------------------------------------------------------------------------
000011A2                           185  * CODE0110: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 0110 INTO OR BCC, BCS, BGE, BLT,
000011A2                           186  *       BVC, OR BRA INSTRUCTION
000011A2                           187  *----------------------------------------------------------------------------------------------------
000011A2  2602                     188  CODE0110        MOVE.L      D2, D3          ;MAKE A COPY OF INSTRUCTION TO D3
000011A4  E94B                     189                  LSL         #4, D3          ;SHIFT TO THE LEFT 4 BITS
000011A6  E04B                     190                  LSR         #8, D3          ;SHIFT TO THE RIGHT 8 BITS
000011A8  E84B                     191                  LSR         #4, D3          ;SHIFT TO THE RIGHT 4 BITS
000011AA  C6FC 0006                192                  MULU        #6, D3
000011AE                           193                  
000011AE  47F9 0000123C            194                  LEA         TABLESIX, A3
000011B4  4EB3 3000                195                  JSR         0(A3, D3)
000011B8  4E75                     196                  RTS
000011BA                           197  
000011BA                           198  *----------------------------------------------------------------------------------------------------
000011BA                           199  * CODE0111: HEXADECIMAL INSTRUCTION STARTING WITH 0111 IS NOT DEFINED
000011BA                           200  *----------------------------------------------------------------------------------------------------
000011BA  4E75                     201  CODE0111        RTS
000011BC                           202  
000011BC                           203  *----------------------------------------------------------------------------------------------------
000011BC                           204  * CODE1000: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1000 INTO OR INSTRUCTION
000011BC                           205  *----------------------------------------------------------------------------------------------------
000011BC  14FC 004F                206  CODE1000        MOVE.B      #'O', (A2)+
000011C0  14FC 0052                207                  MOVE.B      #'R', (A2)+
000011C4  14FC 002E                208                  MOVE.B      #'.', (A2)+
000011C8  4EB9 000013F4            209                  JSR         GET_OPMODE
000011CE  14FC 0009                210                  MOVE.B      #$09, (A2)+
000011D2                           211                  ;JSR        ISOR
000011D2  4E75                     212  RETURN1000      RTS
000011D4                           213  
000011D4                           214  *----------------------------------------------------------------------------------------------------
000011D4                           215  * CODE1001: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1001 INTO SUB INSTRUCTION
000011D4                           216  *----------------------------------------------------------------------------------------------------
000011D4  14FC 0053                217  CODE1001        MOVE.B      #'S', (A2)+
000011D8  14FC 0055                218                  MOVE.B      #'U', (A2)+
000011DC  14FC 0042                219                  MOVE.B      #'B', (A2)+
000011E0  14FC 002E                220                  MOVE.B      #'.', (A2)+
000011E4  4EB9 000013F4            221                  JSR         GET_OPMODE
000011EA  14FC 0009                222                  MOVE.B      #$09, (A2)+
000011EE                           223                  ;JSR        ISSUB
000011EE  4E75                     224  RETURN1001      RTS
000011F0                           225  
000011F0                           226  *----------------------------------------------------------------------------------------------------
000011F0                           227  * CODE1010: HEXADECIMAL INSTRUCTION STARTING WITH 1010 IS NOT DEFINED
000011F0                           228  *----------------------------------------------------------------------------------------------------
000011F0  4E75                     229  CODE1010        RTS
000011F2                           230  
000011F2                           231  *---------------------------------------------------------------------
000011F2                           232  * CODE1011: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1011
000011F2                           233  *           INTO EOR OR CMP INSTRUCTION
000011F2                           234  *---------------------------------------------------------------------
000011F2  2602                     235  CODE1011        MOVE.L      D2, D3          ;MAKE A COPY OF INSTRUCTION TO D3
000011F4  EF4B                     236                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
000011F6  EC4B                     237                  LSR         #6, D3          ;SHIFT TO THE RIGHT 8 BITS
000011F8  EE4B                     238                  LSR         #7, D3          ;SHIFT TO THE RIGHT 4 BITS
000011FA  C6FC 0006                239                  MULU        #6, D3
000011FE                           240                  
000011FE  47F9 0000131C            241                  LEA         TABLEELEVEN, A3
00001204  4EB3 3000                242                  JSR         0(A3, D3)
00001208  4E75                     243                  RTS
0000120A                           244  
0000120A                           245  *---------------------------------------------------------------------
0000120A                           246  * CODE1100: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1100
0000120A                           247  *           INTO MUL INSTRUCTION
0000120A                           248  *---------------------------------------------------------------------
0000120A                           249  CODE1100
0000120A                           250  ;MULS
0000120A                           251  
0000120A                           252  *---------------------------------------------------------------------
0000120A                           253  * CODE1101: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1101
0000120A                           254  *           INTO ADDA INSTRUCTION
0000120A                           255  *---------------------------------------------------------------------
0000120A                           256  CODE1101
0000120A                           257  ; ADD
0000120A                           258  ; ADDA
0000120A                           259  
0000120A                           260  *---------------------------------------------------------------------
0000120A                           261  * CODE1110: DISASSEMBLE THE HEXADECIMAL INSTRUCTION STARTING WITH 1110
0000120A                           262  *           INTO LSR, LSL, ASR, ASL, ROL, OR ROR INSTRUCTION
0000120A                           263  *---------------------------------------------------------------------
0000120A                           264  CODE1110
0000120A                           265  ; LSR
0000120A                           266  ; LSL
0000120A                           267  ; ASR
0000120A                           268  ; ASL
0000120A                           269  ; ROL
0000120A                           270  ; ROR
0000120A                           271  
0000120A  4EF9 0000123A            272  TABLEFOURTEEN   JMP         FOURTEEN000
00001210  4EF9 0000123A            273                  JMP         FOURTEEN001
00001216  4EF9 0000123A            274                  JMP         FOURTEEN010
0000121C  4EF9 0000123A            275                  JMP         FOURTEEN011
00001222  4EF9 0000123A            276                  JMP         FOURTEEN100
00001228  4EF9 0000123A            277                  JMP         FOURTEEN101
0000122E  4EF9 0000123A            278                  JMP         FOURTEEN110
00001234  4EF9 0000123A            279                  JMP         FOURTEEN111
0000123A                           280  
0000123A                           281  FOURTEEN000
0000123A                           282  FOURTEEN001
0000123A                           283  FOURTEEN010
0000123A                           284  FOURTEEN011
0000123A                           285  FOURTEEN100
0000123A                           286  FOURTEEN101
0000123A                           287  FOURTEEN110
0000123A                           288  FOURTEEN111
0000123A                           289  *----------------------------------------------------------------------------------------------------
0000123A                           290  * CODE1111: HEXADECIMAL INSTRUCTION STARTING WITH 1111 IS NOT DEFINED
0000123A                           291  *----------------------------------------------------------------------------------------------------
0000123A  4E75                     292  CODE1111        RTS
0000123C                           293  
0000123C                           294  *---------------------------------------------------------------------
0000123C                           295  * TABLESIX:
0000123C                           296  *---------------------------------------------------------------------
0000123C  4EF9 0000129E            297  TABLESIX        JMP         SIX0000
00001242  4EF9 000012B0            298                  JMP         SIX0001
00001248  4EF9 000012B2            299                  JMP         SIX0010
0000124E  4EF9 000012B4            300                  JMP         SIX0011
00001254  4EF9 000012B6            301                  JMP         SIX0100
0000125A  4EF9 000012C8            302                  JMP         SIX0101
00001260  4EF9 000012DA            303                  JMP         SIX0110
00001266  4EF9 000012DC            304                  JMP         SIX0111
0000126C  4EF9 000012DE            305                  JMP         SIX1000
00001272  4EF9 000012F0            306                  JMP         SIX1001
00001278  4EF9 000012F2            307                  JMP         SIX1010
0000127E  4EF9 000012F4            308                  JMP         SIX1011
00001284  4EF9 000012F6            309                  JMP         SIX1100
0000128A  4EF9 00001308            310                  JMP         SIX1101
00001290  4EF9 00001318            311                  JMP         SIX1110
00001296  4EF9 0000131A            312                  JMP         SIX1111
0000129C  4E75                     313  RETURN_SIX      RTS
0000129E                           314  
0000129E  14FC 0042                315  SIX0000         MOVE.B      #'B', (A2)+
000012A2  14FC 0052                316                  MOVE.B      #'R', (A2)+
000012A6  14FC 0041                317                  MOVE.B      #'A', (A2)+
000012AA  14FC 0009                318                  MOVE.B      #$09, (A2)+
000012AE                           319                  ;JSR        ISBRA
000012AE  60EC                     320                  BRA         RETURN_SIX
000012B0                           321  
000012B0  60EA                     322  SIX0001         BRA         RETURN_SIX
000012B2                           323  
000012B2  60E8                     324  SIX0010         BRA         RETURN_SIX
000012B4                           325  
000012B4  60E6                     326  SIX0011         BRA         RETURN_SIX
000012B6                           327  
000012B6  14FC 0042                328  SIX0100         MOVE.B      #'B', (A2)+
000012BA  14FC 0043                329                  MOVE.B      #'C', (A2)+
000012BE  14FC 0043                330                  MOVE.B      #'C', (A2)+
000012C2  14FC 0009                331                  MOVE.B      #$09, (A2)+
000012C6                           332                  ;JSR        ISBRA
000012C6  60D4                     333                  BRA         RETURN_SIX
000012C8                           334                  
000012C8  14FC 0042                335  SIX0101         MOVE.B      #'B', (A2)+
000012CC  14FC 0043                336                  MOVE.B      #'C', (A2)+
000012D0  14FC 0053                337                  MOVE.B      #'S', (A2)+
000012D4  14FC 0009                338                  MOVE.B      #$09, (A2)+
000012D8                           339                  ;JSR        ISBRA
000012D8  60C2                     340                  BRA         RETURN_SIX
000012DA                           341                  
000012DA  60C0                     342  SIX0110         BRA         RETURN_SIX
000012DC                           343  
000012DC  60BE                     344  SIX0111         BRA         RETURN_SIX
000012DE                           345  
000012DE  14FC 0042                346  SIX1000         MOVE.B      #'B', (A2)+
000012E2  14FC 0056                347                  MOVE.B      #'V', (A2)+
000012E6  14FC 0043                348                  MOVE.B      #'C', (A2)+
000012EA  14FC 0009                349                  MOVE.B      #$09, (A2)+
000012EE                           350                  ;JSR        ISBRA
000012EE  60AC                     351                  BRA         RETURN_SIX
000012F0                           352                  
000012F0  60AA                     353  SIX1001         BRA         RETURN_SIX
000012F2                           354  
000012F2  60A8                     355  SIX1010         BRA         RETURN_SIX
000012F4                           356  
000012F4  60A6                     357  SIX1011         BRA         RETURN_SIX
000012F6                           358  
000012F6  14FC 0042                359  SIX1100         MOVE.B      #'B', (A2)+
000012FA  14FC 0047                360                  MOVE.B      #'G', (A2)+
000012FE  14FC 0045                361                  MOVE.B      #'E', (A2)+
00001302  14FC 0009                362                  MOVE.B      #$09, (A2)+
00001306                           363                  ;JSR        ISBRA
00001306  6094                     364                  BRA         RETURN_SIX
00001308                           365                  
00001308  14FC 0042                366  SIX1101         MOVE.B      #'B', (A2)+
0000130C  14FC 004C                367                  MOVE.B      #'L', (A2)+
00001310  14FC 0054                368                  MOVE.B      #'T', (A2)+
00001314  14FC 0009                369                  MOVE.B      #$09, (A2)+
00001318                           370                  ;JSR        ISBRA
00001318                           371  
00001318  6082                     372  SIX1110         BRA         RETURN_SIX
0000131A                           373  
0000131A  6080                     374  SIX1111         BRA         RETURN_SIX
0000131C                           375  
0000131C                           376  *----------------------------------------------------------------------------------------------------
0000131C                           377  * TABLEELEVEN: THIS IS FUNCTION FOR DETERMINING THE OPMODE OF THE INSTRUCTION
0000131C                           378  *----------------------------------------------------------------------------------------------------
0000131C  4EF9 0000134E            379  TABLEELEVEN     JMP         ELEVEN000
00001322  4EF9 00001368            380                  JMP         ELEVEN001
00001328  4EF9 00001382            381                  JMP         ELEVEN010
0000132E  4EF9 0000139C            382                  JMP         ELEVEN011
00001334  4EF9 0000139E            383                  JMP         ELEVEN100
0000133A  4EF9 000013B8            384                  JMP         ELEVEN101
00001340  4EF9 000013D4            385                  JMP         ELEVEN110
00001346  4EF9 000013F0            386                  JMP         ELEVEN111
0000134C  4E75                     387  RETURN_ELEVEN   RTS
0000134E                           388                  
0000134E  14FC 0043                389  ELEVEN000       MOVE.B      #'C', (A2)+
00001352  14FC 004D                390                  MOVE.B      #'M', (A2)+
00001356  14FC 0050                391                  MOVE.B      #'P', (A2)+
0000135A  14FC 002E                392                  MOVE.B      #'.', (A2)+
0000135E  14FC 0042                393                  MOVE.B      #'B', (A2)+
00001362  14FC 0009                394                  MOVE.B      #$09, (A2)+
00001366                           395                  ;JSR            ISCMP
00001366  60E4                     396                  BRA         RETURN_ELEVEN
00001368                           397                  
00001368  14FC 0043                398  ELEVEN001       MOVE.B      #'C', (A2)+
0000136C  14FC 004D                399                  MOVE.B      #'M', (A2)+
00001370  14FC 0050                400                  MOVE.B      #'P', (A2)+
00001374  14FC 002E                401                  MOVE.B      #'.', (A2)+
00001378  14FC 0057                402                  MOVE.B      #'W', (A2)+
0000137C  14FC 0009                403                  MOVE.B      #$09, (A2)+
00001380                           404                  ;JSR            ISCMP
00001380  60CA                     405                  BRA         RETURN_ELEVEN
00001382                           406                  
00001382  14FC 0043                407  ELEVEN010       MOVE.B      #'C', (A2)+
00001386  14FC 004D                408                  MOVE.B      #'M', (A2)+
0000138A  14FC 0050                409                  MOVE.B      #'P', (A2)+
0000138E  14FC 002E                410                  MOVE.B      #'.', (A2)+
00001392  14FC 0042                411                  MOVE.B      #'B', (A2)+
00001396  14FC 0009                412                  MOVE.B      #$09, (A2)+
0000139A                           413              ;   JSR         ISCMP
0000139A  60B0                     414                  BRA         RETURN_ELEVEN
0000139C                           415                  
0000139C  60AE                     416  ELEVEN011       BRA         RETURN_ELEVEN
0000139E                           417  
0000139E  14FC 0045                418  ELEVEN100       MOVE.B      #'E', (A2)+
000013A2  14FC 004F                419                  MOVE.B      #'O', (A2)+
000013A6  14FC 0052                420                  MOVE.B      #'R', (A2)+
000013AA  14FC 002E                421                  MOVE.B      #'.', (A2)+
000013AE  14FC 0042                422                  MOVE.B      #'B', (A2)+
000013B2  14FC 0009                423                  MOVE.B      #$09, (A2)+
000013B6                           424                  ;JSR            ISEOR
000013B6  6094                     425                  BRA         RETURN_ELEVEN
000013B8                           426                  
000013B8  14FC 0045                427  ELEVEN101       MOVE.B      #'E', (A2)+
000013BC  14FC 004F                428                  MOVE.B      #'O', (A2)+
000013C0  14FC 0052                429                  MOVE.B      #'R', (A2)+
000013C4  14FC 002E                430                  MOVE.B      #'.', (A2)+
000013C8  14FC 0057                431                  MOVE.B      #'W', (A2)+
000013CC  14FC 0009                432                  MOVE.B      #$09, (A2)+
000013D0                           433                  ;JSR            ISEOR
000013D0  6000 FF7A                434                  BRA         RETURN_ELEVEN
000013D4                           435                  
000013D4  14FC 0045                436  ELEVEN110       MOVE.B      #'E', (A2)+
000013D8  14FC 004F                437                  MOVE.B      #'O', (A2)+
000013DC  14FC 0052                438                  MOVE.B      #'R', (A2)+
000013E0  14FC 002E                439                  MOVE.B      #'.', (A2)+
000013E4  14FC 004C                440                  MOVE.B      #'L', (A2)+
000013E8  14FC 0009                441                  MOVE.B      #$09, (A2)+
000013EC                           442                  ;JSR            ISEOR
000013EC  6000 FF5E                443                  BRA         RETURN_ELEVEN
000013F0                           444                  
000013F0  6000 FF5A                445  ELEVEN111       BRA         RETURN_ELEVEN
000013F4                           446  
000013F4                           447  *----------------------------------------------------------------------------------------------------
000013F4                           448  * GET_OPMODE: THIS IS FUNCTION FOR DETERMINING THE OPMODE OF THE INSTRUCTION
000013F4                           449  *----------------------------------------------------------------------------------------------------
000013F4  2602                     450  GET_OPMODE      MOVE.L      D2, D3          ;MAKE A COPY OF INSTRUCTION TO D3
000013F6  EF4B                     451                  LSL         #7, D3          ;SHIFT TO THE LEFT 7 BITS
000013F8  E84B                     452                  LSR         #4, D3          ;SHIFT TO THE RIGHT 4 BITS
000013FA  EE4B                     453                  LSR         #7, D3          ;SHIFT TO THE RIGHT 7 BITS
000013FC  C6FC 0006                454                  MULU        #6, D3
00001400                           455                  
00001400  47F9 0000140C            456                  LEA         TABLEOPMODE, A3
00001406  4EB3 3000                457                  JSR         0(A3, D3)
0000140A  4E75                     458                  RTS
0000140C                           459    
0000140C  4EF9 0000143E            460  TABLEOPMODE     JMP         MODE000
00001412  4EF9 00001444            461                  JMP         MODE001
00001418  4EF9 0000144A            462                  JMP         MODE010
0000141E  4EF9 00001450            463                  JMP         MODE011
00001424  4EF9 00001452            464                  JMP         MODE100
0000142A  4EF9 00001458            465                  JMP         MODE101
00001430  4EF9 0000145E            466                  JMP         MODE110
00001436  4EF9 00001464            467                  JMP         MODE111
0000143C  4E75                     468  RETURN_OPMODE   RTS
0000143E                           469                  
0000143E  14FC 0042                470  MODE000         MOVE.B      #'B', (A2)+
00001442  60F8                     471                  BRA         RETURN_OPMODE
00001444                           472                  
00001444  14FC 0057                473  MODE001         MOVE.B      #'W', (A2)+
00001448  60F2                     474                  BRA         RETURN_OPMODE
0000144A                           475                  
0000144A  14FC 004C                476  MODE010         MOVE.B      #'L', (A2)+
0000144E  60EC                     477                  BRA         RETURN_OPMODE
00001450                           478  
00001450  60EA                     479  MODE011         BRA         RETURN_OPMODE
00001452                           480  
00001452  14FC 0042                481  MODE100         MOVE.B      #'B', (A2)+
00001456  60E4                     482                  BRA         RETURN_OPMODE
00001458                           483  
00001458  14FC 0057                484  MODE101         MOVE.B      #'W', (A2)+
0000145C  60DE                     485                  BRA         RETURN_OPMODE
0000145E                           486                  
0000145E  14FC 004C                487  MODE110         MOVE.B      #'L', (A2)+
00001462  60D8                     488                  BRA         RETURN_OPMODE
00001464                           489                  
00001464  60D6                     490  MODE111         BRA         RETURN_OPMODE
00001466                           491                  
00001466                           492  *----------------------------------------------------------------------------------------------------
00001466                           493  * GET_SIZE : THIS IS A FUNCTION FOR DETERMINING THE SIZE OF THE INSTRUCTION
00001466                           494  *----------------------------------------------------------------------------------------------------
00001466  2602                     495  GET_SIZE        MOVE.L      D2, D3          ;MAKE A COPY OF ORIGINAL INSTRUCTION TO D3
00001468  E14B                     496                  LSL         #8, D3          ;SHIFT TO THE LEFT 8 BITS
0000146A  EC4B                     497                  LSR         #6, D3          ;SHIFT TO THE RIGHT 6 BITS
0000146C  E04B                     498                  LSR         #8, D3          ;SHIFT TO THE RIGHT 8 BITS
0000146E  C6FC 0006                499                  MULU        #6, D3
00001472                           500                  
00001472  47F9 0000147E            501                  LEA         TABLESIZE, A3
00001478  4EB3 3000                502                  JSR         0(A3, D3)
0000147C  4E75                     503                  RTS
0000147E                           504  
0000147E  4EF9 00001498            505  TABLESIZE       JMP         SIZE00
00001484  4EF9 0000149E            506                  JMP         SIZE01
0000148A  4EF9 000014A4            507                  JMP         SIZE10
00001490  4EF9 000014AA            508                  JMP         SIZE11
00001496  4E75                     509  RETURN_SIZE     RTS
00001498                           510                  
00001498  14FC 0042                511  SIZE00          MOVE.B      #'B', (A2)+
0000149C  60F8                     512                  BRA         RETURN_SIZE
0000149E                           513                                  
0000149E  14FC 0057                514  SIZE01          MOVE.B      #'W', (A2)+
000014A2  60F2                     515                  BRA         RETURN_SIZE
000014A4                           516                  
000014A4  14FC 004C                517  SIZE10          MOVE.B      #'L', (A2)+
000014A8  60EC                     518                  BRA         RETURN_SIZE
000014AA                           519                  
000014AA  60EA                     520  SIZE11          BRA         RETURN_SIZE
000014AC                           521      
000014AC                           522  *----------------------------------------------------------------------------------------------------
000014AC                           523  
000014AC                           524                  END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
CMPI                10BC
CODE0000            108C
CODE0001            10D6
CODE0010            10F4
CODE0011            113A
CODE0100            1180
CODE0101            1180
CODE0110            11A2
CODE0111            11BA
CODE1000            11BC
CODE1001            11D4
CODE1010            11F0
CODE1011            11F2
CODE1100            120A
CODE1101            120A
CODE1110            120A
CODE1111            123A
DISASSEMBLE         1012
ELEVEN000           134E
ELEVEN001           1368
ELEVEN010           1382
ELEVEN011           139C
ELEVEN100           139E
ELEVEN101           13B8
ELEVEN110           13D4
ELEVEN111           13F0
FINISH              108A
FOURTEEN000         123A
FOURTEEN001         123A
FOURTEEN010         123A
FOURTEEN011         123A
FOURTEEN100         123A
FOURTEEN101         123A
FOURTEEN110         123A
FOURTEEN111         123A
GET_OPMODE          13F4
GET_SIZE            1466
MAINTABLE           102A
MODE000             143E
MODE001             1444
MODE010             144A
MODE011             1450
MODE100             1452
MODE101             1458
MODE110             145E
MODE111             1464
MOVEAL              111C
MOVEAW              1162
MOVEL               110E
MOVEW               1154
ORI                 10A6
RETURN1000          11D2
RETURN1001          11EE
RETURN_ELEVEN       134C
RETURN_OPMODE       143C
RETURN_SIX          129C
RETURN_SIZE         1496
SIX0000             129E
SIX0001             12B0
SIX0010             12B2
SIX0011             12B4
SIX0100             12B6
SIX0101             12C8
SIX0110             12DA
SIX0111             12DC
SIX1000             12DE
SIX1001             12F0
SIX1010             12F2
SIX1011             12F4
SIX1100             12F6
SIX1101             1308
SIX1110             1318
SIX1111             131A
SIZE00              1498
SIZE01              149E
SIZE10              14A4
SIZE11              14AA
START               1000
TABLE0000           1094
TABLEELEVEN         131C
TABLEFOURTEEN       120A
TABLEOPMODE         140C
TABLESIX            123C
TABLESIZE           147E
